<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/p
        https://www.springframework.org/schema/p/spring-p.xsd">
        <!-- 1、扫描有注解的类 -->
	   <context:component-scan base-package="cn.tea">
	   		<!-- 除开controller，因为controller中的类在Springmvc中进行管理 -->
	   		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	   </context:component-scan>
	   
	   <!-- 2、加载数据源的配置文件 -->
   	   <context:property-placeholder location="classpath:datasource.properties"/>
   	   
   	   <!-- 3、配置数据源 我们使用C3P0 -->
	   <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	   		<property name="driverClass" value="${jdbc.driver}"/>
	   		<property name="jdbcUrl" value="${jdbc.url}"/>
	   		<property name="user" value="${jdbc.username}"/>
	   		<property name="password" value="${jdbc.password}"/>
	   		<property name="initialPoolSize" value="${jdbc.initialSize}"/>
	   </bean>
	   
	   <!-- 4、配置SqlSessionFactoryBean -->
	   <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	   		<!-- 配置数据源 -->
	   		<property name="dataSource" ref="dataSource"/>
	   		<!-- 配置别名 -->
	   		<property name="typeAliasesPackage" value="cn.tea.pojo"/>
	   		<!-- 配置mapper映射文件的路径 -->
	   		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	   		<!-- 配置分页插件 -->
	   		<property name="plugins">
	   			<array>
	   				<bean class="com.github.pagehelper.PageInterceptor">
	   					<property name="properties">
	   						<props>
	   							<prop key="helperDialect">mysql</prop>
	   							<prop key="reasonable">true</prop>
	   						</props>
	   					</property>
	   				</bean>
	   			</array>
	   		</property>
	   </bean>
	   
	   <!-- 5、配置dao -->
	   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	   		<!-- 配置dao接口的包全路径 -->
	   		<property name="basePackage" value="cn.tea.dao"/>
	   		<!-- 配置 -->
	   		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
	   </bean>
	   
	   <!-- 6、配置事务增强的类 -->
	   <bean id="transactionManager" 
	   class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	   		<!-- 配置数据源 -->
	   		<property name="dataSource" ref="dataSource"/>
	   </bean>
	   
	   <!-- 7、配置事务增强的方法 -->
	   <tx:advice id="txAdvice">
	   		<tx:attributes>
	   			<!-- 对所有的方法都进行事务增强的控制 -->
	   			<tx:method name="*" propagation="REQUIRED"/>
	   		</tx:attributes>
	   </tx:advice>
	   
	   <!-- 8、配置切面 -->
	    <aop:config>
	    	<aop:pointcut expression="execution(* cn.tea..*(..))" id="myPointcut"/>
	    	<!-- 使aop和事务增强进行组合 -->
	    	<aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut"/>
	    </aop:config>
		
		
</beans>